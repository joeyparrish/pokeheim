name: Build and zip

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get Valheim version id
        id: valheimversion
        run: echo "::set-output name=valheimversion::$(curl -s https://api.steamcmd.net/v1/info/896660 | jq -r ".data.\"896660\".depots.branches.public.buildid")"

      # Work around stupid permissions issues that only show up in the
      # nektos/act environment I use for local testing of workflows.
      - run: sudo bash -c 'chown -R $SUDO_USER .'

      - name: Get build commands
        run: scripts/install-linux-tools.sh

      - name: Install NuGet dependencies
        run: |
          nuget restore Pokeheim.sln

      - name: Cache Valheim
        id: cachevalheim
        uses: actions/cache@v2
        with:
          path: ~/VHINSTALL
          key: ${{ steps.valheimversion.outputs.valheimversion }}-${{ hashFiles('**/lockfiles') }}-BepInExPack-5.4.1900

      - name: Install SteamCMD
        if: steps.cachevalheim.outputs.cache-hit != 'true'
        uses: CyberAndrii/setup-steamcmd@v1

      - name: Prepare Pokeheim dependencies
        if: steps.cachevalheim.outputs.cache-hit != 'true'
        run: |
          wget -O bepinex.zip "https://valheim.thunderstore.io/package/download/denikson/BepInExPack_Valheim/5.4.1900/"
          unzip bepinex.zip -d ~/BepInExRaw
          steamcmd +login anonymous +force_install_dir ~/VHINSTALL +app_update 896660 validate +exit
          mv ~/VHINSTALL/valheim_server_Data/ ~/VHINSTALL/valheim_Data/
          mv ~/BepInExRaw/BepInExPack_Valheim/* ~/VHINSTALL/
          wget -O mountup.zip "https://valheim.thunderstore.io/package/download/Oran1/Mountup/3.2.9/"
          unzip mountup.zip -d ~/VHINSTALL/BepInEx/plugins/

      - name: Remove old DLLs
        run: |
          rm -rf ~/VHINSTALL/valheim_server_Data/Managed/publicized_assemblies
          rm -rf ~/VHINSTALL/BepInEx/plugins/MMHOOK

      - name: Set references to DLLs
        run: |
          echo "<?xml version=\"1.0\" encoding=\"utf-8\"?><Project ToolsVersion=\"Current\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"><PropertyGroup><VALHEIM_INSTALL>$HOME/VHINSTALL/</VALHEIM_INSTALL></PropertyGroup></Project>" > Environment.props

      - name: Set plugin version number
        run: |
          version=$(cat Pokeheim/Package/manifest.json | jq -r .version_number)
          sed -e "s/PluginVersion = .*;/PluginVersion = \"$version\";/" \
              -i Pokeheim/Pokeheim.cs
          sed -e "s/(\"0.0.0.0\")/(\"$version.0\")/" \
              -i Pokeheim/Properties/AssemblyInfo.cs

      - name: Build solution
        run: |
          msbuild Pokeheim.sln /p:Configuration=Debug
          msbuild Pokeheim.sln /p:Configuration=Release

      - name: Build zip
        run: scripts/build-package-zip.sh

      - uses: actions/upload-artifact@v2
        with:
          name: Pokeheim.zip
          path: Pokeheim.zip
